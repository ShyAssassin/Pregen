[priority]
ID based assets
Pipeline abstraction
window independent time + delta time

[general]
split engine modules into different crates
application trait for generic loading in engine
compile engine and application to a dylib and load dynamically from a launcher
logging with log levels and "zones" to filter logs from different parts of the engine

[shader]
Automatically switch between WGSL and raw SPIRV if no env var is set
add simple import function to bring in other shader module code at compile time

[gfx]
batched rendering
shader hot reloading
font/sprite atlas support
Storage textures / buffers
egui or imgui intergration
material system abstraction
raster pipeline abstractions
better uncaptured error handling
bindless textures for text rendering
improve texture writing after creation
Try get gfx::Buffer to work with vectors

[windowing]
Extend keyboard windowing events

[Assert system]
Custom assert system with dialog
